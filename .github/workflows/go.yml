jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Install upx
        run: sudo apt install upx
      - name: Build
        run: ./build.sh dldump
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: create_release
        name: Create Draft Release
        uses: actions/create-release@v1
        with:
          draft: true
          prerelease: false
          release_name: dldump
          tag_name: dldump
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/upload-release-asset@v1.0.1
        with:
          asset_content_type: application/zip
          asset_name: dldump-darwin-amd64.zip
          asset_path: ./dldump-darwin-amd64.zip
          upload_url: ${{ steps.create_release.outputs.upload_url }}
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/upload-release-asset@v1.0.1
        with:
          asset_content_type: application/zip
          asset_name: dldump-darwin-arm64.zip
          asset_path: ./dldump-darwin-arm64.zip
          upload_url: ${{ steps.create_release.outputs.upload_url }}
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/upload-release-asset@v1.0.1
        with:
          asset_content_type: application/zip
          asset_name: dldump-linux-amd64.zip
          asset_path: ./dldump-linux-amd64.zip
          upload_url: ${{ steps.create_release.outputs.upload_url }}
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/upload-release-asset@v1.0.1
        with:
          asset_content_type: application/zip
          asset_name: dldump-linux-arm64.zip
          asset_path: ./dldump-linux-arm64.zip
          upload_url: ${{ steps.create_release.outputs.upload_url }}
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/upload-release-asset@v1.0.1
        with:
          asset_content_type: application/zip
          asset_name: dldump-windows-amd64.zip
          asset_path: ./dldump-windows-amd64.zip
          upload_url: ${{ steps.create_release.outputs.upload_url }}
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: eregon/publish-release@v1
        with:
          release_id: ${{ steps.create_release.outputs.id }}
name: Go
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
